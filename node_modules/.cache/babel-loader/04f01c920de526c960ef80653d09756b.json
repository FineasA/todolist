{"ast":null,"code":"var _jsxFileName = \"/Users/finLord/Desktop/reactnikejs/todolistagain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Todo from './components/Todo/Todo';\nimport Todos from './components/Todo/Todos';\nimport Radium from 'radium';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateToDo = e => {\n      const task = e.target.value;\n      this.setState({\n        todo: task\n      });\n    };\n\n    this.addTask = () => {\n      this.setState({\n        todos: [...this.state.todos, this.state.todo] // completions: [...this.state.completions, false]\n\n      }); // console.log(this.state.completions);\n    };\n\n    this.deleteTask = index => {\n      this.setState({\n        todos: this.state.todos.filter((_, i) => i !== index)\n      });\n    };\n\n    this.isCompleted = index => {\n      this.setState({\n        isCompleted: !this.state.isCompleted\n      });\n      console.log(this.state.isCompleted);\n    };\n\n    this.state = {\n      task: [{\n        todos: [],\n        todo: '',\n        isCompleted: false\n      }]\n    };\n  }\n\n  render() {\n    const todosTasks = this.state.todos.map((todo, index) => {\n      return React.createElement(Todos, {\n        key: index,\n        todo: todo,\n        deleteTask: () => this.deleteTask(index),\n        completed: () => this.isCompleted(index),\n        style: this.state.isCompleted ? {\n          textDecoration: 'line-through'\n        } : null // sendCompletions={this.state.isCompleted}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: headerStyling,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Todo List App\"), React.createElement(Todo, {\n      changed: this.updateToDo,\n      submit: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), todosTasks);\n  }\n\n}\n\nconst headerStyling = {\n  padding: '60px',\n  borderRadius: '20px',\n  textAlign: 'center',\n  background: '#003399',\n  color: 'white',\n  fontSize: '30px'\n};\nexport default App; //completions: [\n//   ...this.state.completions,\n//   this.state.completions[index] === !this.state.isCompleted\n// ]\n//[...this.state.task.todos, this.state.task.todo]","map":{"version":3,"sources":["/Users/finLord/Desktop/reactnikejs/todolistagain/src/App.js"],"names":["React","Component","Todo","Todos","Radium","App","constructor","props","updateToDo","e","task","target","value","setState","todo","addTask","todos","state","deleteTask","index","filter","_","i","isCompleted","console","log","render","todosTasks","map","textDecoration","headerStyling","padding","borderRadius","textAlign","background","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './components/Todo/Todo';\nimport Todos from './components/Todo/Todos';\nimport Radium from 'radium';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      task: [\n        {\n          todos: [],\n          todo: '',\n          isCompleted: false\n        }\n      ]\n    };\n  }\n  updateToDo = e => {\n    const task = e.target.value;\n    this.setState({\n      todo: task\n    });\n  };\n  addTask = () => {\n    this.setState({\n      todos: [...this.state.todos, this.state.todo]\n      // completions: [...this.state.completions, false]\n    });\n    // console.log(this.state.completions);\n  };\n  deleteTask = index => {\n    this.setState({\n      todos: this.state.todos.filter((_, i) => i !== index)\n    });\n  };\n  isCompleted = index => {\n    this.setState({\n      isCompleted: !this.state.isCompleted\n    });\n    console.log(this.state.isCompleted);\n  };\n\n  render() {\n    const todosTasks = this.state.todos.map((todo, index) => {\n      return (\n        <Todos\n          key={index}\n          todo={todo}\n          deleteTask={() => this.deleteTask(index)}\n          completed={() => this.isCompleted(index)}\n          style={\n            this.state.isCompleted ? { textDecoration: 'line-through' } : null\n          }\n          // sendCompletions={this.state.isCompleted}\n        />\n      );\n    });\n    return (\n      <div className='App'>\n        <h1 style={headerStyling}>Todo List App</h1>\n        <Todo changed={this.updateToDo} submit={this.addTask} />\n        {todosTasks}\n      </div>\n    );\n  }\n}\n\nconst headerStyling = {\n  padding: '60px',\n  borderRadius: '20px',\n  textAlign: 'center',\n  background: '#003399',\n  color: 'white',\n  fontSize: '30px'\n};\n\nexport default App;\n\n//completions: [\n//   ...this.state.completions,\n//   this.state.completions[index] === !this.state.isCompleted\n// ]\n\n//[...this.state.task.todos, this.state.task.todo]\n"]},"metadata":{},"sourceType":"module"}